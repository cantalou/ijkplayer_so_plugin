apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'maven-publish'

bintray {
    user = hasProperty("BINTRAY_USER") ? getProperty("BINTRAY_USER") : getProperty("BINTRAY_USER")
    key = hasProperty("BINTRAY_USER") ? getProperty("BINTRAY_USER") : getProperty("BINTRAY_KEY")
    configurations = ['archives']
    publications = ['MyPublication']

    pkg {
        repo = 'maven'
        userOrg = user
        name = PROJ_NAME
        desc = PROJ_DESCRIPTION
        websiteUrl = PROJ_WEBSITEURL
        issueTrackerUrl = PROJ_ISSUETRACKERURL
        vcsUrl = PROJ_VCSURL
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true

        version {
            name = project.version
            released = new Date()
            vcsTag = project.version
        }
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId PROJ_GROUP
            artifactId PROJ_ARTIFACTID
            version PROJ_VERSION
            artifact(sourceJar)
            artifact "${project.buildDir}/outputs/aar/${project.name}-release.aar"

            // From https://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}
